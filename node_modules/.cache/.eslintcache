[{"/home/jkpark/Documents/react/voice-collector/src/index.js":"1","/home/jkpark/Documents/react/voice-collector/src/App.js":"2","/home/jkpark/Documents/react/voice-collector/src/reportWebVitals.js":"3","/home/jkpark/Documents/react/voice-collector/src/components/styled.js":"4","/home/jkpark/Documents/react/voice-collector/src/components/RecordDiv.js":"5","/home/jkpark/Documents/react/voice-collector/src/components/NavBar.js":"6","/home/jkpark/Documents/react/voice-collector/src/components/DisplayList.js":"7","/home/jkpark/Documents/react/voice-collector/src/components/Login.js":"8"},{"size":500,"mtime":1613608978901,"results":"9","hashOfConfig":"10"},{"size":2340,"mtime":1613717641145,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1613609423765,"results":"12","hashOfConfig":"10"},{"size":2398,"mtime":1613715931512,"results":"13","hashOfConfig":"10"},{"size":7910,"mtime":1613713159766,"results":"14","hashOfConfig":"10"},{"size":994,"mtime":1613714600122,"results":"15","hashOfConfig":"10"},{"size":1327,"mtime":1613700864557,"results":"16","hashOfConfig":"10"},{"size":1192,"mtime":1613717563736,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3byz4h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jkpark/Documents/react/voice-collector/src/index.js",[],["36","37"],"/home/jkpark/Documents/react/voice-collector/src/App.js",["38"],"/home/jkpark/Documents/react/voice-collector/src/reportWebVitals.js",[],"/home/jkpark/Documents/react/voice-collector/src/components/styled.js",[],"/home/jkpark/Documents/react/voice-collector/src/components/RecordDiv.js",["39","40","41"],"\nimport { React, useRef, useEffect, useState } from \"react\";\nimport { Grid, IconButton, Typography } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MicIcon from '@material-ui/icons/Mic';\n\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport WaveSurfer from \"wavesurfer.js\";\n\nfunction Record({ classes, sentList, setSentList, index, setIndex, user }) {\n\n    const media = useReactMediaRecorder({ audio: true, onStop: (a, b) => { setblob(b) } })\n    const [text, setText] = useState('')\n    const [recBtn, setRecBtn] = useState(true)\n\n    const waveformRef = useRef();\n    const [blob, setblob] = useState('');\n\n    const [decBtnState, setDecState] = useState({ 'color': 'disabled', 'disabled': true })\n    const [iconColor, setIconColor] = useState('action')\n    const [incBtnState, setIncState] = useState({ 'color': 'inherit', 'disabled': false })\n\n    const [statusMSG, setStatusMSG] = useState(\"Ready to record\")\n    const [statusVis, setStatusVis] = useState('block')\n    const [waveVis, setWavVis] = useState('none')\n\n    const totalNumber = sentList.length\n\n    useEffect(() => {\n        if (waveformRef.current && blob !== '') {\n            blobToBase64(blob);            \n            const wavesurfer = WaveSurfer.create({\n                container: waveformRef.current,\n                waveColor: 'blue',\n                barWidth: 2,\n                barMinHeight: 1,\n                cursorColor: 'transparent',\n                progressColor: 'blue',\n                // scrollParent:true\n            });\n\n            wavesurfer.loadBlob(blob);\n\n            return () => {\n                wavesurfer.destroy()\n            }\n        }\n    }, [blob]);\n\n    useEffect(() => {\n        if (text !== '') {\n            var check = window.confirm('음성 인식 결과 : \\n' + text)\n            if (check) {\n                setSentList(sentList.map(item => item.id === index ? { ...item, done: true } : item))\n                changeSent('+')                \n            }\n        }\n        setStatusMSG(\"Ready to record\")\n        setStatusVis('block')\n        setWavVis('none')\n    }, [text])\n\n    useEffect(() => {\n        if (index === 0) {\n            setDecState({ 'color': 'disabled', 'state': true })\n        } else {\n            setDecState({ 'color': 'inherit', 'state': false })\n        }\n\n        if (index === sentList.length - 1) {\n            setIncState({ 'color': 'disabled', 'state': true })\n        } else {\n            setIncState({ 'color': 'inherit', 'state': false })\n        }\n    }, [index])\n\n    function blobToBase64(blob) {\n        console.log('Connect to server...')\n        var reader = new FileReader();\n        reader.onload = function () {\n            var dataUrl = reader.result;\n            var base64 = dataUrl.split(',')[1];\n            sendToOffline(base64);\n            getScript(base64, index, user, sentList[index].text)\n        };\n        reader.readAsDataURL(blob);\n    };\n\n    function sendToOffline(b64data) {\n        const recipeUrl = \"https://ai-demo.tmaxos.com/xwpqe/restasr/\"\n        const postBody = {\n            'uuid': 'restasr',\n            'data': b64data\n        }\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody)\n        };\n\n        fetch(recipeUrl, requestMetadata).then(res => res.json()).then(res => setText(res.text))\n    }\n\n    function getScript(b64data, index, user, scp) {\n        const recipeUrl = \"http://0.0.0.0:5024/send_audio\"\n        const postBody = {\n          'user': user,\n          'blob': b64data,\n          'index' : index,\n          'sent' : scp,\n        }\n        const requestMetadata = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postBody)\n        };\n    \n        fetch(recipeUrl, requestMetadata)\n        .then(res => res.json())\n      }\n\n    function record() {\n        if (recBtn) {\n            media.startRecording();\n            setIconColor('secondary');\n            setStatusMSG('Recording...')\n            setDecState({ 'color': 'disabled', 'state': true })\n            setIncState({ 'color': 'disabled', 'state': true })\n        } else {\n            media.stopRecording();\n            setIconColor('action');\n            setStatusMSG('Ready to record')\n            setStatusVis('none')\n            setWavVis('block')\n            if (index === 0) {\n                setDecState({ 'color': 'disabled', 'state': true })\n            } else {\n                setDecState({ 'color': 'inherit', 'state': false })\n            }\n\n            if (index === sentList.length - 1) {\n                setIncState({ 'color': 'disabled', 'state': true })\n            } else {\n                setIncState({ 'color': 'inherit', 'state': false })\n            }\n\n\n        }\n        setRecBtn(!recBtn);\n    }\n\n    function changeSent(direc) {\n        if (direc === '+') {\n            if (index < sentList.length - 1) {\n                setIndex(index + 1)\n            }\n        } else if (direc === '-') {\n            if (index > 0) {\n                setIndex(index - 1)\n            }\n        }\n        setIconColor('action');\n        setStatusMSG('Ready to record')\n        setStatusVis('block')\n        setWavVis('none')\n    }\n\n    return (\n        <div className={classes.content}>\n            <div className={classes.index}>\n                <Typography variant=\"h5\">\n                    {sentList[index].done ? 'Done - ' : 'Undone - '}\n                    {index + 1} / {totalNumber}\n                </Typography>\n            </div>\n            <div className={classes.parSentence}>\n                <div className={classes.sentence}>\n                    {sentList[index].text.split('\\n').map((line, idx) => {\n                        return <Typography key={idx} variant=\"h4\" style={{paddingTop:7, paddingBottom : 7}}>{line}</Typography>\n                    })}\n                </div>\n            </div>\n            <div className={classes.visual}>\n                <div className={classes.status} style={{ display: statusVis }}>\n                    <Typography variant=\"h4\">{statusMSG}</Typography>\n                </div>\n                <div ref={waveformRef} className={classes.waveform} style={{ display: waveVis }}></div>\n            </div>\n            <div className={classes.control}>\n                <Grid container spacing={2}>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton\n                            onClick={() => { changeSent('-') }}\n                            disabled={decBtnState['state']}>\n                            <ChevronLeftIcon\n                                fontSize=\"large\"\n                                className={classes.controlBtn}\n                                color={decBtnState['color']} />\n                        </IconButton>\n                    </Grid>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton onClick={record}><MicIcon fontSize=\"large\" className={classes.controlBtn} color={iconColor} /></IconButton>\n                    </Grid>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton\n                            onClick={() => { changeSent('+') }}\n                            disabled={incBtnState['state']}>\n                            <ChevronRightIcon\n                                fontSize=\"large\"\n                                className={classes.controlBtn}\n                                color={incBtnState['color']} />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </div>\n        </div >\n    )\n}\n\nexport default Record","/home/jkpark/Documents/react/voice-collector/src/components/NavBar.js",[],"/home/jkpark/Documents/react/voice-collector/src/components/DisplayList.js",[],"/home/jkpark/Documents/react/voice-collector/src/components/Login.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":73,"column":35,"nodeType":"48","messageId":"49","endLine":73,"endColumn":37},{"ruleId":"50","severity":1,"message":"51","line":49,"column":8,"nodeType":"52","endLine":49,"endColumn":14,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":62,"column":8,"nodeType":"52","endLine":62,"endColumn":14,"suggestions":"55"},{"ruleId":"50","severity":1,"message":"56","line":76,"column":8,"nodeType":"52","endLine":76,"endColumn":15,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blobToBase64'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has missing dependencies: 'changeSent', 'index', 'sentList', and 'setSentList'. Either include them or remove the dependency array. If 'setSentList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["61"],"React Hook useEffect has a missing dependency: 'sentList.length'. Either include it or remove the dependency array.",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [blob, blobToBase64]",{"range":"69","text":"70"},"Update the dependencies array to be: [changeSent, index, sentList, setSentList, text]",{"range":"71","text":"72"},"Update the dependencies array to be: [index, sentList.length]",{"range":"73","text":"74"},[1776,1782],"[blob, blobToBase64]",[2200,2206],"[changeSent, index, sentList, setSentList, text]",[2621,2628],"[index, sentList.length]"]