{"ast":null,"code":"var _jsxFileName = \"/home/jkpark/Documents/react/voice-collector/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport useStyles from './components/styled';\nimport NavBar from './components/NavBar';\nimport Record from './components/RecordDiv';\nimport DisplayList from './components/DisplayList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SimpleCard() {\n  _s();\n\n  const classes = useStyles();\n  const [sentList, setSentList] = useState([{\n    id: 0,\n    text: '옷에 직접 비늘조각을 꿰어\\n 붙인다는 점에서\\n 조각들끼리만 꿰어서\\n 옷 위에 걸쳐 입는 찰갑과 구분된다.',\n    done: false\n  }, {\n    id: 1,\n    text: '섀도우 헌터스 원 뼈의 도시는 \\n카산드라 클레어의 소설로,\\n 섀도우 헌터스 시리즈의 첫 작품이다.',\n    done: false\n  }, {\n    id: 2,\n    text: '네이버 웹툰에서 연재하고 있는 \\n상하 작가의 웹툰이며,\\n 네이버 수요일 웹툰 이위를 한 \\n인기 웹툰이기도 하다.',\n    done: false\n  }, {\n    id: 3,\n    text: '저도 얘기만 들었지, \\n직접 와보기는 처음이네요,\\n 듣던 대로 구경할 게 \\n정말 많네요.',\n    done: false\n  }, {\n    id: 4,\n    text: '한 사람 더 왔다고 아까 얘기했어요,\\n 술잔이랑 앞접시 좀 빨리 주세요.',\n    done: false\n  }, {\n    id: 5,\n    text: '술 못 마신다는 얘긴 못 들었는데,\\n 왜 못 먹는 거야?',\n    done: false\n  }, {\n    id: 6,\n    text: '말 꺼내기 쉽지 않은 걸 보니,\\n 한잔하면서 툭 터놓고 얘기할까?',\n    done: false\n  }, {\n    id: 7,\n    text: '가산디지털단지 차 막히는 거야 \\n하루 이틀 얘긴가요, \\n상관없으니까 안전하게 가주세요.',\n    done: false\n  }, {\n    id: 8,\n    text: '너무 예쁘다, 고맙다 얘들아.',\n    done: false\n  }]);\n  const [mode, setMode] = useState('show');\n  const [index, setIndex] = useState(0);\n\n  function showContent() {\n    if (mode === 'show') {\n      return /*#__PURE__*/_jsxDEV(DisplayList, {\n        classes: classes,\n        sentList: sentList,\n        onClick: id => {\n          setIndex(id);\n          setMode('record');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this);\n    } else if (mode === 'record') {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        classes: classes,\n        sentList: sentList,\n        setSentList: setSentList,\n        index: index,\n        setIndex: setIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n  function test() {\n    const recipeUrl = \"http://0.0.0.0:5024/get_text\";\n    const postBody = {\n      'user': 'jkp'\n    };\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    };\n    fetch(recipeUrl, requestMetadata).then(res => res.json()).then(res => {\n      console.log(res);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: test,\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        classes: classes,\n        onClick: () => {\n          setMode('show');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.cardContent,\n        children: showContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SimpleCard, \"hUmmqLScy5xrevKSisCVfPiYPWA=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleCard\");","map":{"version":3,"sources":["/home/jkpark/Documents/react/voice-collector/src/App.js"],"names":["React","useState","Card","CardContent","useStyles","NavBar","Record","DisplayList","SimpleCard","classes","sentList","setSentList","id","text","done","mode","setMode","index","setIndex","showContent","test","recipeUrl","postBody","requestMetadata","method","headers","body","JSON","stringify","fetch","then","res","json","console","log","card","cardContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport useStyles from './components/styled'\nimport NavBar from './components/NavBar'\nimport Record from './components/RecordDiv'\nimport DisplayList from './components/DisplayList'\n\nexport default function SimpleCard() {\n  const classes = useStyles();\n\n  const [sentList, setSentList] = useState([\n    { id: 0, text: '옷에 직접 비늘조각을 꿰어\\n 붙인다는 점에서\\n 조각들끼리만 꿰어서\\n 옷 위에 걸쳐 입는 찰갑과 구분된다.', done: false },\n    { id: 1, text: '섀도우 헌터스 원 뼈의 도시는 \\n카산드라 클레어의 소설로,\\n 섀도우 헌터스 시리즈의 첫 작품이다.', done: false },\n    { id: 2, text: '네이버 웹툰에서 연재하고 있는 \\n상하 작가의 웹툰이며,\\n 네이버 수요일 웹툰 이위를 한 \\n인기 웹툰이기도 하다.', done: false },\n    { id: 3, text: '저도 얘기만 들었지, \\n직접 와보기는 처음이네요,\\n 듣던 대로 구경할 게 \\n정말 많네요.', done: false },\n    { id: 4, text: '한 사람 더 왔다고 아까 얘기했어요,\\n 술잔이랑 앞접시 좀 빨리 주세요.', done: false },\n    { id: 5, text: '술 못 마신다는 얘긴 못 들었는데,\\n 왜 못 먹는 거야?', done: false },\n    { id: 6, text: '말 꺼내기 쉽지 않은 걸 보니,\\n 한잔하면서 툭 터놓고 얘기할까?', done: false },\n    { id: 7, text: '가산디지털단지 차 막히는 거야 \\n하루 이틀 얘긴가요, \\n상관없으니까 안전하게 가주세요.', done: false },\n    { id: 8, text: '너무 예쁘다, 고맙다 얘들아.', done: false },\n  ])\n\n  const [mode, setMode] = useState('show')\n  const [index, setIndex] = useState(0)\n\n\n  function showContent() {\n    if (mode === 'show') {\n      return (<DisplayList\n        classes={classes}\n        sentList={sentList}\n        onClick={(id) => {\n          setIndex(id)\n          setMode('record')\n        }} />)\n    } else if (mode === 'record') {\n      return (<Record\n        classes={classes}\n        sentList={sentList}\n        setSentList={setSentList}\n        index={index}\n        setIndex={setIndex} />)\n    }\n  }\n\n\n  function test() {\n    const recipeUrl = \"http://0.0.0.0:5024/get_text\"\n    const postBody = {\n      'user': 'jkp'\n    }\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    };\n\n    fetch(recipeUrl, requestMetadata)\n    .then(res => res.json())\n    .then(res => {\n      console.log(res)\n    })\n  }\n\n\n  return (\n    <>\n    <button onClick={test}>test</button>\n    <Card className={classes.card}>\n      <NavBar classes={classes} onClick={() => { setMode('show') }} />\n      <CardContent className={classes.cardContent}>\n        {showContent()}\n      </CardContent>\n    </Card>\n    </>\n  \n  );\n}"]},"metadata":{},"sourceType":"module"}