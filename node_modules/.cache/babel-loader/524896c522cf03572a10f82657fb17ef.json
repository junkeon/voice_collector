{"ast":null,"code":"var _jsxFileName = \"/home/jkpark/Documents/react/voice-collector/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport useStyles from './components/styled';\nimport NavBar from './components/NavBar';\nimport Record from './components/RecordDiv';\nimport DisplayList from './components/DisplayList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Input } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles2 = makeStyles({\n  content: {\n    position: \"relative\",\n    marginLeft: 40,\n    marginRight: 40,\n    marginTop: 20,\n    height: 340,\n    backgroundColor: '#334455'\n  }\n});\nexport default function SimpleCard() {\n  _s();\n\n  const classes = useStyles();\n  const classes2 = useStyles2();\n  const [sentList, setSentList] = useState([]);\n  const [mode, setMode] = useState('show');\n  const [index, setIndex] = useState(0);\n  const [user, setUser] = useState('jkp');\n\n  function showContent() {\n    if (mode === 'show') {\n      if (sentList.length === 0) {\n        getScript();\n      }\n\n      return /*#__PURE__*/_jsxDEV(DisplayList, {\n        classes: classes,\n        sentList: sentList,\n        onClick: id => {\n          setIndex(id);\n          setMode('record');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this);\n    } else if (mode === 'record') {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        classes: classes,\n        sentList: sentList,\n        setSentList: setSentList,\n        index: index,\n        setIndex: setIndex,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this);\n    }\n  }\n\n  function getScript() {\n    const recipeUrl = \"http://0.0.0.0:5024/get_text\";\n    const postBody = {\n      'user': user\n    };\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    };\n    fetch(recipeUrl, requestMetadata).then(res => res.json()).then(res => {\n      const tmpList = [];\n      res['sent_list'].map(item => {\n        const sent = {\n          id: item[0],\n          text: item[1],\n          done: item[2]\n        };\n        tmpList.push(sent);\n      });\n      setSentList(tmpList);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        classes: classes,\n        onClick: () => {\n          setMode('show');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.cardContent,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              title: \"username\",\n              placeholder: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              title: \"username\",\n              placeholder: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              class: \"forgot\",\n              href: \"#\",\n              children: \"Forgot Username?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SimpleCard, \"0tuIxPuQuXKudCWk0e2J9iV3Xx4=\", false, function () {\n  return [useStyles, useStyles2];\n});\n\n_c = SimpleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleCard\");","map":{"version":3,"sources":["/home/jkpark/Documents/react/voice-collector/src/App.js"],"names":["React","useState","Card","CardContent","useStyles","NavBar","Record","DisplayList","makeStyles","Button","Input","useStyles2","content","position","marginLeft","marginRight","marginTop","height","backgroundColor","SimpleCard","classes","classes2","sentList","setSentList","mode","setMode","index","setIndex","user","setUser","showContent","length","getScript","id","recipeUrl","postBody","requestMetadata","method","headers","body","JSON","stringify","fetch","then","res","json","tmpList","map","item","sent","text","done","push","card","cardContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport useStyles from './components/styled'\nimport NavBar from './components/NavBar'\nimport Record from './components/RecordDiv'\nimport DisplayList from './components/DisplayList'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Input } from '@material-ui/core';\n\nconst useStyles2 = makeStyles({\n  content: {\n    position: \"relative\",\n    marginLeft: 40,\n    marginRight: 40,\n    marginTop: 20,\n    height: 340,\n    backgroundColor: '#334455'\n  },\n})\n\nexport default function SimpleCard() {\n  const classes = useStyles();\n  const classes2 = useStyles2();\n\n  const [sentList, setSentList] = useState([])\n  const [mode, setMode] = useState('show')\n  const [index, setIndex] = useState(0)\n\n  const [user, setUser] = useState('jkp')\n\n  function showContent() {\n    if (mode === 'show') {\n      if (sentList.length === 0) {\n        getScript()\n      }\n\n      return (<DisplayList\n        classes={classes}\n        sentList={sentList}\n        onClick={(id) => {\n          setIndex(id)\n          setMode('record')\n        }} />)\n    } else if (mode === 'record') {\n      return (<Record\n        classes={classes}\n        sentList={sentList}\n        setSentList={setSentList}\n        index={index}\n        setIndex={setIndex}\n        user={user} />)\n    }\n  }\n\n  function getScript() {\n    const recipeUrl = \"http://0.0.0.0:5024/get_text\"\n    const postBody = {\n      'user': user\n    }\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    };\n\n    fetch(recipeUrl, requestMetadata)\n      .then(res => res.json())\n      .then(res => {\n        const tmpList = []\n        res['sent_list'].map(item => {\n          const sent = { id: item[0], text: item[1], done: item[2] }\n          tmpList.push(sent)\n        })\n        setSentList(tmpList)\n      })\n  }\n\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <NavBar classes={classes} onClick={() => { setMode('show') }} />\n        <CardContent className={classes.cardContent}>\n          {/* {showContent()} */}\n          <div className=\"App\">\n            <h2>Login to your account</h2>\n            <form>\n              <input type=\"text\" title=\"username\" placeholder=\"username\" />\n              <input type=\"password\" title=\"username\" placeholder=\"password\" />\n              <button type=\"submit\" class=\"btn\">Login</button>\n              <a class=\"forgot\" href=\"#\">Forgot Username?</a>\n            </form>\n          </div>\n        </CardContent>\n      </Card>\n    </>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}