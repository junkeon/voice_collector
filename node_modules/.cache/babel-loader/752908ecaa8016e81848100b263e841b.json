{"ast":null,"code":"var _jsxFileName = \"/home/jkpark/Documents/react/voice-collector/src/components/RecordDiv.js\",\n    _s = $RefreshSig$();\n\nimport { React, useRef, useEffect, useState } from \"react\";\nimport { Grid, IconButton, Typography } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Record({\n  classes\n}) {\n  _s();\n\n  const media = useReactMediaRecorder({\n    audio: true,\n    onStop: (a, b) => {\n      blobToBase64(b);\n      setURL(b);\n    }\n  });\n  const [text, setText] = useState('');\n  const [recBtn, setRecBtn] = useState(true);\n  const waveformRef = useRef();\n  const [url, setURL] = useState('');\n  useEffect(() => {\n    if (waveformRef.current && url !== '') {\n      const wavesurfer = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: 'blue',\n        barWidth: 2,\n        barMinHeight: 1,\n        cursorColor: 'transparent',\n        progressColor: 'blue' // scrollParent:true\n\n      });\n      wavesurfer.loadBlob(url);\n      return () => {\n        wavesurfer.destroy();\n      };\n    }\n  }, [url]);\n  useEffect(() => {\n    if (text !== '') {\n      var check = window.confirm('음성 인식 결과 : \\n' + text);\n\n      if (check) {\n        setIndex(index + 1);\n      }\n\n      setStatusMSG(\"Ready to record\");\n    }\n  }, [text, index]);\n  const [iconColor, setIconColor] = useState('action');\n  const [statusMSG, setStatusMSG] = useState(\"Ready to record\");\n  const [statusVis, setStatusVis] = useState('block');\n  const [index, setIndex] = useState(0);\n  const sentList = ['섀도우 헌터스 원 뼈의 도시는 \\n카산드라 클레어의 소설로,\\n 섀도우 헌터스 시리즈의 첫 작품이다.', '네이버 웹툰에서 연재하고 있는 \\n상하 작가의 웹툰이며,\\n 네이버 수요일 웹툰 이위를 한 \\n인기 웹툰이기도 하다.', '저도 얘기만 들었지, \\n직접 와보기는 처음이네요,\\n 듣던 대로 구경할 게 \\n정말 많네요.', '한 사람 더 왔다고 \\n아까 얘기했어요,\\n 술잔이랑 앞접시 \\n좀 빨리 주세요.', '술 못 마신다는 얘긴 \\n못 들었는데,\\n 왜 못 먹는 거야?', '말 꺼내기 쉽지 않은 걸 보니,\\n 한잔하면서 툭 터놓고 얘기할까?', '가산디지털단지 차 막히는 거야 하루 이틀 얘긴가요,\\n 상관없으니까 안전하게 가주세요.', \"북경공항 예술가 감금사건' 으로부터 정확히 일년째인\\n 이천십이년 사월 삼일 예술가 아이 웨이웨이에 의한\\n 셀프감시카메라 프로젝트예요.\", '너무 예쁘다, 고맙다 얘들아.', '템플스테이 다녀온 얘기 좀 해봐요, 재밌었어요?'];\n  const totalNumber = sentList.length;\n\n  function blobToBase64(blob) {\n    console.log('Connect to server...');\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      var dataUrl = reader.result;\n      var base64 = dataUrl.split(',')[1];\n      sendToOffline(base64);\n    };\n\n    reader.readAsDataURL(blob);\n  }\n\n  ;\n\n  function sendToOffline(b64data) {\n    const recipeUrl = \"https://ai-demo.tmaxos.com/xwpqe/restasr/\";\n    const postBody = {\n      'uuid': 'restasr',\n      'data': b64data\n    };\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    };\n    fetch(recipeUrl, requestMetadata).then(res => res.json()).then(res => setText(res.text));\n  }\n\n  function record() {\n    if (recBtn) {\n      media.startRecording();\n      setIconColor('secondary');\n      setStatusMSG('Recording...');\n    } else {\n      media.stopRecording();\n      setIconColor('action');\n      setStatusMSG('Ready to record');\n      setStatusVis('none');\n    }\n\n    setRecBtn(!recBtn);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.index,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [index + 1, \" / \", totalNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.parSentence,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sentence,\n        children: sentList[index].split('\\n').map((line, idx) => {\n          return /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: line\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 78\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.visual,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.status,\n        style: {\n          display: statusVis\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: statusMSG\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: waveformRef,\n        className: classes.waveform\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setIndex(index - 1);\n            },\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n              fontSize: \"large\",\n              className: classes.controlBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: record,\n            children: /*#__PURE__*/_jsxDEV(MicIcon, {\n              fontSize: \"large\",\n              className: classes.controlBtn,\n              color: iconColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setIndex(index + 1);\n            },\n            children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n              fontSize: \"large\",\n              className: classes.controlBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Record, \"19UUhZ3aCZshOMqFMfTJA6WZu3k=\", false, function () {\n  return [useReactMediaRecorder];\n});\n\n_c = Record;\nexport default Record;\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["/home/jkpark/Documents/react/voice-collector/src/components/RecordDiv.js"],"names":["React","useRef","useEffect","useState","Grid","IconButton","Typography","ChevronLeftIcon","ChevronRightIcon","MicIcon","useReactMediaRecorder","WaveSurfer","Record","classes","media","audio","onStop","a","b","blobToBase64","setURL","text","setText","recBtn","setRecBtn","waveformRef","url","current","wavesurfer","create","container","waveColor","barWidth","barMinHeight","cursorColor","progressColor","loadBlob","destroy","check","window","confirm","setIndex","index","setStatusMSG","iconColor","setIconColor","statusMSG","statusVis","setStatusVis","sentList","totalNumber","length","blob","console","log","reader","FileReader","onload","dataUrl","result","base64","split","sendToOffline","readAsDataURL","b64data","recipeUrl","postBody","requestMetadata","method","headers","body","JSON","stringify","fetch","then","res","json","record","startRecording","stopRecording","content","parSentence","sentence","map","line","idx","visual","status","display","waveform","control","grid","controlBtn"],"mappings":"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","sourcesContent":["\nimport { React, useRef, useEffect, useState } from \"react\";\nimport { Grid, IconButton, Typography } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MicIcon from '@material-ui/icons/Mic';\n\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport WaveSurfer from \"wavesurfer.js\";\n\nfunction Record({ classes }) {\n\n    const media = useReactMediaRecorder({ audio: true, onStop: (a, b) => { blobToBase64(b); setURL(b) } })\n    const [text, setText] = useState('')\n    const [recBtn, setRecBtn] = useState(true)\n\n    const waveformRef = useRef();\n    const [url, setURL] = useState('');\n\n    useEffect(() => {\n        if (waveformRef.current && url !== '') {\n            const wavesurfer = WaveSurfer.create({\n                container: waveformRef.current,\n                waveColor: 'blue',\n                barWidth: 2,\n                barMinHeight: 1,\n                cursorColor: 'transparent',\n                progressColor: 'blue',\n                // scrollParent:true\n            });\n\n            wavesurfer.loadBlob(url);\n\n            return () => {\n                wavesurfer.destroy()\n            }\n        }\n    }, [url]);\n\n    useEffect(() => {\n        if (text !== '') {\n            var check = window.confirm('음성 인식 결과 : \\n' + text)\n            if (check) {\n                setIndex(index + 1)\n            }\n            setStatusMSG(\"Ready to record\")\n\n        }\n    }, [text, index])\n\n    const [iconColor, setIconColor] = useState('action')\n    const [statusMSG, setStatusMSG] = useState(\"Ready to record\")\n    const [statusVis, setStatusVis] = useState('block')\n\n    const [index, setIndex] = useState(0)\n    const sentList = [\n        '섀도우 헌터스 원 뼈의 도시는 \\n카산드라 클레어의 소설로,\\n 섀도우 헌터스 시리즈의 첫 작품이다.',\n        '네이버 웹툰에서 연재하고 있는 \\n상하 작가의 웹툰이며,\\n 네이버 수요일 웹툰 이위를 한 \\n인기 웹툰이기도 하다.',\n        '저도 얘기만 들었지, \\n직접 와보기는 처음이네요,\\n 듣던 대로 구경할 게 \\n정말 많네요.',\n        '한 사람 더 왔다고 \\n아까 얘기했어요,\\n 술잔이랑 앞접시 \\n좀 빨리 주세요.',\n        '술 못 마신다는 얘긴 \\n못 들었는데,\\n 왜 못 먹는 거야?',\n        '말 꺼내기 쉽지 않은 걸 보니,\\n 한잔하면서 툭 터놓고 얘기할까?',\n        '가산디지털단지 차 막히는 거야 하루 이틀 얘긴가요,\\n 상관없으니까 안전하게 가주세요.',\n        \"북경공항 예술가 감금사건' 으로부터 정확히 일년째인\\n 이천십이년 사월 삼일 예술가 아이 웨이웨이에 의한\\n 셀프감시카메라 프로젝트예요.\",\n        '너무 예쁘다, 고맙다 얘들아.',\n        '템플스테이 다녀온 얘기 좀 해봐요, 재밌었어요?',\n    ]\n    const totalNumber = sentList.length\n\n    function blobToBase64(blob) {\n        console.log('Connect to server...')\n        var reader = new FileReader();\n        reader.onload = function () {\n            var dataUrl = reader.result;\n            var base64 = dataUrl.split(',')[1];\n            sendToOffline(base64);\n        };\n        reader.readAsDataURL(blob);\n    };\n\n    function sendToOffline(b64data) {\n        const recipeUrl = \"https://ai-demo.tmaxos.com/xwpqe/restasr/\"\n        const postBody = {\n            'uuid': 'restasr',\n            'data': b64data\n        }\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody)\n        };\n\n        fetch(recipeUrl, requestMetadata).then(res => res.json()).then(res => setText(res.text))\n    }\n\n    function record() {\n        if (recBtn) {\n            media.startRecording();\n            setIconColor('secondary');\n            setStatusMSG('Recording...')\n        } else {\n            media.stopRecording();\n            setIconColor('action');\n            setStatusMSG('Ready to record')\n            setStatusVis('none')\n        }\n        setRecBtn(!recBtn);\n    }\n\n    return (\n        <div className={classes.content}>\n            <div className={classes.index}>\n                <Typography variant=\"h5\">{index + 1} / {totalNumber}</Typography>\n            </div>\n            <div className={classes.parSentence}>\n                <div className={classes.sentence}>\n                    {/* <Typography variant=\"h4\">간장 공장 공장장은 장 공장장이고,</Typography>\n                    <Typography variant=\"h4\">된장 공장 공장장은 간 공장장이다.</Typography> */}\n                    {sentList[index].split('\\n').map((line, idx) => { return <Typography key={idx} variant=\"h4\">{line}</Typography> })}\n                </div>\n            </div>\n            <div className={classes.visual}>\n                <div className={classes.status} style={{ display: statusVis }}>\n                    <Typography variant=\"h4\">{statusMSG}</Typography>\n                </div>\n                <div ref={waveformRef} className={classes.waveform}></div>\n            </div>\n            <div className={classes.control}>\n                <Grid container spacing={2}>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton onClick={() => { setIndex(index - 1) }}><ChevronLeftIcon fontSize=\"large\" className={classes.controlBtn} /></IconButton>\n                    </Grid>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton onClick={record}><MicIcon fontSize=\"large\" className={classes.controlBtn} color={iconColor} /></IconButton>\n                    </Grid>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton onClick={() => { setIndex(index + 1) }}><ChevronRightIcon fontSize=\"large\" className={classes.controlBtn} /></IconButton>\n                    </Grid>\n                </Grid>\n            </div>\n        </div >\n    )\n}\n\nexport default Record"]},"metadata":{},"sourceType":"module"}