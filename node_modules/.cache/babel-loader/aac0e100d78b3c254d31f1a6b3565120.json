{"ast":null,"code":"import _slicedToArray from\"/home/jkpark/Documents/react/voice-collector/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import useStyles from'./components/styled';import NavBar from'./components/NavBar';import Record from'./components/RecordDiv';import DisplayList from'./components/DisplayList';import Login from'./components/Login';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function SimpleCard(){var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),sentList=_useState2[0],setSentList=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),listBtn=_useState4[0],setListBtn=_useState4[1];var _useState5=useState('login'),_useState6=_slicedToArray(_useState5,2),mode=_useState6[0],setMode=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),index=_useState8[0],setIndex=_useState8[1];var _useState9=useState({user:'',passwd:''}),_useState10=_slicedToArray(_useState9,2),userInfo=_useState10[0],setUserInfo=_useState10[1];var user=userInfo.user,passwd=userInfo.passwd;var recipeUrl=\"http://192.168.153.20:5024/\";function onClick(){setMode('show');getScript(recipeUrl);setListBtn(false);}function showContent(){if(mode==='login'){return/*#__PURE__*/_jsx(Login,{classes:classes,user:user,passwd:passwd,userInfo:userInfo,setUserInfo:setUserInfo,onClick:onClick});}else if(mode==='show'){return/*#__PURE__*/_jsx(DisplayList,{classes:classes,sentList:sentList,onClick:function onClick(id){setIndex(id);setMode('record');}});}else if(mode==='record'){return/*#__PURE__*/_jsx(Record,{recipeUrl:recipeUrl,classes:classes,sentList:sentList,setSentList:setSentList,index:index,setIndex:setIndex,user:user});}}function getScript(recipeUrl){// const recipeUrl = \"http://192.168.153.20:5024/get_text\"\nvar postBody={'user':user};var requestMetadata={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(postBody)};fetch(recipeUrl+'/get_text',requestMetadata).then(function(res){return res.json();}).then(function(res){var tmpList=[];res['sent_list'].map(function(item){var sent={id:item[0],text:item[1],done:item[2]};tmpList.push(sent);});setSentList(tmpList);});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Card,{className:classes.card,children:[/*#__PURE__*/_jsx(NavBar,{classes:classes,onClick:function onClick(){setMode('show');},listBtn:listBtn}),/*#__PURE__*/_jsx(CardContent,{className:classes.cardContent,children:showContent()})]})});}","map":{"version":3,"sources":["/home/jkpark/Documents/react/voice-collector/src/App.js"],"names":["React","useState","Card","CardContent","useStyles","NavBar","Record","DisplayList","Login","SimpleCard","classes","sentList","setSentList","listBtn","setListBtn","mode","setMode","index","setIndex","user","passwd","userInfo","setUserInfo","recipeUrl","onClick","getScript","showContent","id","postBody","requestMetadata","method","headers","body","JSON","stringify","fetch","then","res","json","tmpList","map","item","sent","text","done","push","card","cardContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport useStyles from './components/styled'\nimport NavBar from './components/NavBar'\nimport Record from './components/RecordDiv'\nimport DisplayList from './components/DisplayList'\nimport Login from './components/Login'\n\n\n\nexport default function SimpleCard() {\n  const classes = useStyles();\n\n  const [sentList, setSentList] = useState([])\n  const [listBtn, setListBtn] = useState(true)\n  const [mode, setMode] = useState('login')\n  const [index, setIndex] = useState(0)\n\n  const [userInfo, setUserInfo] = useState({ user: '', passwd: '' })\n  const { user, passwd } = userInfo\n\n  const recipeUrl = \"http://192.168.153.20:5024/\"\n\n  function onClick() {\n    setMode('show')\n    getScript(recipeUrl)\n    setListBtn(false)\n  }\n\n  function showContent() {\n    if (mode === 'login') {\n      return (<Login classes={classes}\n        user={user} passwd={passwd} userInfo={userInfo}\n        setUserInfo={setUserInfo}\n        onClick={onClick} />)\n    } else if (mode === 'show') {\n      return (<DisplayList\n        classes={classes}\n        sentList={sentList}\n        onClick={(id) => {\n          setIndex(id)\n          setMode('record')\n        }} />)\n    } else if (mode === 'record') {\n      return (<Record\n        recipeUrl={recipeUrl}\n        classes={classes}\n        sentList={sentList}\n        setSentList={setSentList}\n        index={index}\n        setIndex={setIndex}\n        user={user} />)\n    }\n  }\n\n  function getScript(recipeUrl) {\n    // const recipeUrl = \"http://192.168.153.20:5024/get_text\"\n    const postBody = {\n      'user': user\n    }\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    };\n\n    fetch(recipeUrl + '/get_text', requestMetadata)\n      .then(res => res.json())\n      .then(res => {\n        const tmpList = []\n        res['sent_list'].map(item => {\n          const sent = { id: item[0], text: item[1], done: item[2] }\n          tmpList.push(sent)\n        })\n        setSentList(tmpList)\n      })\n  }\n\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <NavBar classes={classes} onClick={() => { setMode('show') }} listBtn={listBtn} />\n        <CardContent className={classes.cardContent}>\n          {showContent()}\n        </CardContent>\n      </Card>\n    </>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}