{"ast":null,"code":"var _jsxFileName = \"/home/jkpark/Documents/react/voice-collector/src/components/RecordDiv.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { Grid, IconButton, Typography } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useReactMediaRecorder } from \"react-media-recorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Record({\n  classes\n}) {\n  _s();\n\n  const media = useReactMediaRecorder({\n    audio: true,\n    onStop: (a, b) => {\n      blobToBase64(b);\n    }\n  });\n  const [text, setText] = useState('');\n  const [recBtn, setRecBtn] = useState(true);\n\n  function blobToBase64(blob) {\n    console.log('Connect to server...');\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      var dataUrl = reader.result;\n      var base64 = dataUrl.split(',')[1];\n      sendToOffline(base64);\n    };\n\n    reader.readAsDataURL(blob);\n  }\n\n  ;\n\n  function sendToOffline(b64data) {\n    const recipeUrl = \"https://ai-demo.tmaxos.com/xwpqe/restasr/\";\n    const postBody = {\n      'uuid': 'restasr',\n      'data': b64data\n    };\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    };\n    fetch(recipeUrl, requestMetadata).then(res => res.json()).then(res => setText(res.text));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.index,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"015 / 300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.parSentence,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sentence,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"\\uAC04\\uC7A5 \\uACF5\\uC7A5 \\uACF5\\uC7A5\\uC7A5\\uC740 \\uC7A5 \\uACF5\\uC7A5\\uC7A5\\uC774\\uACE0,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"\\uB41C\\uC7A5 \\uACF5\\uC7A5 \\uACF5\\uC7A5\\uC7A5\\uC740 \\uAC04 \\uACF5\\uC7A5\\uC7A5\\uC774\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.visual,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.status,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: recBtn ? \"Ready to record\" : \"Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.waveform\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n              fontSize: \"large\",\n              className: classes.controlBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              recBtn ? media.startRecording() : media.stopRecording();\n              setRecBtn(!recBtn);\n            },\n            children: /*#__PURE__*/_jsxDEV(MicIcon, {\n              fontSize: \"large\",\n              className: classes.controlBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n              fontSize: \"large\",\n              className: classes.controlBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Record, \"SQF93z4484z7WL8W6wNnGekzH8c=\", false, function () {\n  return [useReactMediaRecorder];\n});\n\n_c = Record;\nexport default Record;\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["/home/jkpark/Documents/react/voice-collector/src/components/RecordDiv.js"],"names":["React","useState","Grid","IconButton","Typography","ChevronLeftIcon","ChevronRightIcon","MicIcon","useReactMediaRecorder","Record","classes","media","audio","onStop","a","b","blobToBase64","text","setText","recBtn","setRecBtn","blob","console","log","reader","FileReader","onload","dataUrl","result","base64","split","sendToOffline","readAsDataURL","b64data","recipeUrl","postBody","requestMetadata","method","headers","body","JSON","stringify","fetch","then","res","json","content","index","parSentence","sentence","visual","status","waveform","control","grid","controlBtn","startRecording","stopRecording"],"mappings":"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","sourcesContent":["\nimport { React, useState } from \"react\";\n\nimport { Grid, IconButton, Typography } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport MicIcon from '@material-ui/icons/Mic';\n\nimport { useReactMediaRecorder } from \"react-media-recorder\";\n\nfunction Record({ classes }) {\n\n    const media = useReactMediaRecorder({ audio: true, onStop: (a, b) => { blobToBase64(b); } })\n    const [text, setText] = useState('')\n    const [recBtn, setRecBtn] = useState(true)\n\n    function blobToBase64(blob) {\n        console.log('Connect to server...')\n        var reader = new FileReader();\n        reader.onload = function () {\n            var dataUrl = reader.result;\n            var base64 = dataUrl.split(',')[1];\n            sendToOffline(base64);\n        };\n        reader.readAsDataURL(blob);\n    };\n\n    function sendToOffline(b64data) {\n        const recipeUrl = \"https://ai-demo.tmaxos.com/xwpqe/restasr/\"\n        const postBody = {\n            'uuid': 'restasr',\n            'data': b64data\n        }\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postBody)\n        };\n\n        fetch(recipeUrl, requestMetadata).then(res => res.json()).then(res => setText(res.text))\n    }\n\n    return (\n        <div className={classes.content}>\n            <div className={classes.index}>\n                <Typography variant=\"h5\">015 / 300</Typography>\n            </div>\n            <div className={classes.parSentence}>\n                <div className={classes.sentence}>\n                    <Typography variant=\"h4\">간장 공장 공장장은 장 공장장이고,</Typography>\n                    <Typography variant=\"h4\">된장 공장 공장장은 간 공장장이다.</Typography>\n                </div>\n            </div>\n            <div className={classes.visual}>\n                <div className={classes.status}>\n                    <Typography variant=\"h4\">\n                        {recBtn ? \"Ready to record\" : \"Recording\"}</Typography>\n                </div>\n                <div className={classes.waveform}></div>\n            </div>\n            <div className={classes.control}>\n                <Grid container spacing={2}>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton><ChevronLeftIcon fontSize=\"large\" className={classes.controlBtn} /></IconButton>\n                    </Grid>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton\n                            onClick={\n                                () => {\n                                    recBtn ? media.startRecording() : media.stopRecording();\n                                    setRecBtn(!recBtn)\n                                }\n                            }\n                        ><MicIcon fontSize=\"large\" className={classes.controlBtn} /></IconButton>\n                    </Grid>\n                    <Grid item xs className={classes.grid}>\n                        <IconButton><ChevronRightIcon fontSize=\"large\" className={classes.controlBtn} /></IconButton>\n                    </Grid>\n                </Grid>\n            </div>\n        </div >\n    )\n}\n\nexport default Record"]},"metadata":{},"sourceType":"module"}